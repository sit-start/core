AWSTemplateFormatVersion: 2010-09-09
Description: Development server
Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
    Default: rsa
  InstanceType:
    Description: Devserver EC2 instance type. Allowed values cover all GPU types < $1.50/hr
    Type: String
    Default: g5g.2xlarge
    AllowedValues:
      - g5g.2xlarge
      - g5g.4xlarge
      - g5g.8xlarge
      - g4dn.xlarge
      - g4dn.2xlarge
      - g4dn.4xlarge
      - g5.xlarge
      - g5.2xlarge
      - p3.2xlarge
  SecurityGroups:
    Description: Security groups to assign to the instance
    Type: List<AWS::EC2::SecurityGroup::Id>
    Default: sg-07301ebcb97e0124c,sg-0d1d2e94171ec41c1
  DevserverActivityTopic:
    Description: SNS topic to which activity should be sent
    Type: String
    Default: arn:aws:sns:us-west-2:960487471244:DevserverActivityTopic
  CloneRepositories:
    Description: Whether to clone repositories
    Type: String
    Default: "true"
    AllowedValues: ["true", "false"]
Conditions:
  CloneRepositories: !Equals [!Ref CloneRepositories, "true"]
Mappings:
  InstanceTypeToArch:
    g5g.2xlarge:
      Arch: aarch64
    g5g.4xlarge:
      Arch: aarch64
    g5g.8xlarge:
      Arch: aarch64
    g4dn.xlarge:
      Arch: x86-64
    g4dn.2xlarge:
      Arch: x86-64
    g4dn.4xlarge:
      Arch: x86-64
    g5.xlarge:
      Arch: x86-64
    g5.2xlarge:
      Arch: x86-64
    p3.2xlarge:
      Arch: x86-64
  ArchToAMI:
    aarch64:
      # base ami-08a800e4b5aa90bb8, setup via scripts/ec2_dev_setup.sh:install_g5g()
      AMI: ami-071bc49379107ae95
    x86-64:
      # base ami-0ba26e8b3af2b7155, setup via scripts/ec2_dev_setup.sh:install_g5()
      AMI: ami-03c22e640e258e9b5 # TODO: needs a full rebuild
Resources:
  Ec2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      ImageId: !FindInMap
        - ArchToAMI
        - !FindInMap
          - InstanceTypeToArch
          - !Ref InstanceType
          - Arch
        - AMI
      KeyName: !Ref KeyName
      Monitoring: true
      SecurityGroupIds: !Ref SecurityGroups
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: 256
            VolumeType: gp3
      IamInstanceProfile: !Ref InstanceProfile
      UserData: !If
        - CloneRepositories
        - !Base64 |
          #!/usr/bin/env bash
          # get read-only deploy keys for all repos
          mkdir -p ~ec2-user/.ssh
          repos=(dev core notebooks dotfiles)
          for repo in "${repos[@]}"; do
            key_name="${repo}_deploy_ed25519"
            aws secretsmanager get-secret-value --secret-id "$key_name" \
              --query SecretString --output text |
              jq --raw-output .private \
                >~ec2-user/.ssh/"$key_name"
            chmod go-rwx ~ec2-user/.ssh/"$key_name"
            chown ec2-user:ec2-user ~ec2-user/.ssh/"$key_name"
          done
          # add github keys to known hosts
          github_keys=$(curl -s https://api.github.com/meta |
            jq -r .ssh_keys[])
          while IFS= read -r key; do
            echo "github.com $key" >>~ec2-user/.ssh/known_hosts
          done <<<"$github_keys"
          chown ec2-user:ec2-user ~ec2-user/.ssh/known_hosts
          # clone dotfiles via yadm
          cd ~ec2-user
          GIT_SSH_COMMAND="ssh -i ~ec2-user/.ssh/dotfiles_deploy_ed25519" \
            su ec2-user -c '\
            yadm clone git@github.com:kevdale/dotfiles --no-checkout && \
            yadm checkout ~'
          # clone the main dev repo
          su - ec2-user -c 'deploy_repo dev'
        - !Ref AWS::NoValue
  InactiveAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmActions:
        - !Join [":", [arn:aws:automate, !Ref AWS::Region, ec2:stop]]
        - !Ref DevserverActivityTopic
      AlarmDescription: Fires when the instance is inactive
      AlarmName: !Join ["-", [!Ref AWS::StackName, InactiveAlarm]]
      ComparisonOperator: LessThanThreshold
      Dimensions:
        - Name: InstanceId
          Value: !Ref Ec2Instance
      EvaluationPeriods: 90
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Period: 60
      Statistic: Maximum
      Threshold: 0.5
  InstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: /
      Roles:
        - !Ref InstanceProfileRole
  InstanceProfileRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
            - Sid: AllowAccessToGithubRepositoryDeployKeys
              Effect: Allow
              Action: secretsmanager:GetSecretValue
              Resource:
              - arn:aws:secretsmanager:us-west-2:960487471244:secret:notebooks_deploy_ed25519-PAfMkn
              - arn:aws:secretsmanager:us-west-2:960487471244:secret:dev_deploy_ed25519-1UXiv0
              - arn:aws:secretsmanager:us-west-2:960487471244:secret:core_deploy_ed25519-Vuzr7G
              - arn:aws:secretsmanager:us-west-2:960487471244:secret:dotfiles_deploy_ed25519-RFoHQv
      Path: /
Outputs:
  InstanceId:
    Description: InstanceId of the newly created EC2 instance
    Value: !Ref Ec2Instance
