AWSTemplateFormatVersion: 2010-09-09
Description: Development server
Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
    Default: rsa
  InstanceType:
    Description: Devserver EC2 instance type. Allowed values cover all GPU types < $1.50/hr
    Type: String
    Default: g5g.2xlarge
    AllowedValues:
      - g5g.2xlarge
      - g5g.4xlarge
      - g5g.8xlarge
      - g4dn.xlarge
      - g4dn.2xlarge
      - g4dn.4xlarge
      - g5.xlarge
      - g5.2xlarge
      - p3.2xlarge
  SecurityGroups:
    Description: Security groups to assign to the instance
    Type: List<AWS::EC2::SecurityGroup::Id>
    Default: sg-07301ebcb97e0124c,sg-0d1d2e94171ec41c1
  DevserverActivityTopic:
    Description: SNS topic to which activity should be sent
    Type: String
    Default: arn:aws:sns:us-west-2:960487471244:DevserverActivity
Mappings:
  InstanceTypeToArch:
    g5g.2xlarge:
      Arch: aarch64
    g5g.4xlarge:
      Arch: aarch64
    g5g.8xlarge:
      Arch: aarch64
    g4dn.xlarge:
      Arch: x86-64
    g4dn.2xlarge:
      Arch: x86-64
    g4dn.4xlarge:
      Arch: x86-64
    g5.xlarge:
      Arch: x86-64
    g5.2xlarge:
      Arch: x86-64
    p3.2xlarge:
      Arch: x86-64
  ArchToAMI:
    aarch64:
      # base ami-08a800e4b5aa90bb8, setup via scripts/ec2_dev_setup.sh:install_g5g()
      AMI: ami-0725f59b966a1cee2
    x86-64:
      # base ami-0ba26e8b3af2b7155, setup via scripts/ec2_dev_setup.sh:install_g5()
      AMI: ami-03c22e640e258e9b5 # TODO: needs pigar, ray[default], amazon cloudwatch agent
Resources:
  Ec2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      ImageId: !FindInMap
        - ArchToAMI
        - !FindInMap
          - InstanceTypeToArch
          - !Ref InstanceType
          - Arch
        - AMI
      KeyName: !Ref KeyName
      Monitoring: true
      SecurityGroupIds: !Ref SecurityGroups
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: 128
            VolumeType: gp3
      UserData:
        # TODO: move (some) into ec2_dev_setup.sh and create AMI
        Fn::Base64: !Sub |
          #!/bin/bash -xe        
          mkdir -p /mnt/efs/data-1
          mount -t efs -o tls fs-02f937b821a97637c:/ /mnt/efs/data-1
          echo "fs-02f937b821a97637c:/ /mnt/efs/data-1 efs tls,_netdev" | tee -a /etc/fstab
  InactiveAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmActions:
        - !Join [":", [arn:aws:automate, !Ref AWS::Region, ec2:stop]]
        - !Ref DevserverActivityTopic
      AlarmDescription: Fires when the instance is inactive
      AlarmName: !Join ["-", [!Ref AWS::StackName, InactiveAlarm]]
      ComparisonOperator: LessThanThreshold
      Dimensions:
        - Name: InstanceId
          Value: !Ref Ec2Instance
      EvaluationPeriods: 90
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Period: 60
      Statistic: Maximum
      Threshold: 0.5
Outputs:
  InstanceId:
    Description: InstanceId of the newly created EC2 instance
    Value: !Ref Ec2Instance
