cluster_name: g5g
max_workers: 4
upscaling_speed: 1.0
idle_timeout_minutes: 10
provider:
  type: aws
  region: us-west-2
  availability_zone: us-west-2a,us-west-2b,us-west-2c
auth:
  ssh_user: ec2-user
  ssh_private_key: ~/.ssh/rsa.pem
available_node_types:
  ray.head.default:
    max_workers: 0
    resources: {}
    node_config:
      InstanceType: m6g.xlarge
      ImageId: ami-071bc49379107ae95
      KeyName: rsa
      IamInstanceProfile:
        Arn: arn:aws:iam::960487471244:instance-profile/ray-head
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: 256
            VolumeType: gp3
  ray.worker.default:
    min_workers: 0
    max_workers: 4
    resources: {}
    node_config:
      InstanceType: g5g.2xlarge
      ImageId: ami-071bc49379107ae95
      KeyName: rsa
      IamInstanceProfile:
        Arn: arn:aws:iam::960487471244:instance-profile/ray-worker
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: 256
            VolumeType: gp3
head_node_type: ray.head.default
file_mounts: {
    # github keys
    "~ec2-user/.ssh/github_keys": "~/.ssh/github_keys",
    # deploy keys with read-only access to core and dotfiles repos
    "~ec2-user/.ssh/core_deploy_ed25519": "~/.ssh/core_deploy_ed25519",
    "~ec2-user/.ssh/notebooks_deploy_ed25519": "~/.ssh/notebooks_deploy_ed25519",
    "~ec2-user/.ssh/dotfiles_deploy_ed25519": "~/.ssh/dotfiles_deploy_ed25519",
    "~ec2-user/.ssh/dev_deploy_ed25519": "~/.ssh/dev_deploy_ed25519",
    # local project source; optional
    # "~ec2-user/dev": "~/dev",
  }
cluster_synced_files:
  - "~ec2-user/dev"
  - "~ec2-user/.bash_profile"
  - "~ec2-user/.bashrc"
file_mounts_sync_continuously: True
rsync_exclude:
  - "**/.git"
  - "**/.git/**"
rsync_filter:
  - ".gitignore"
initialization_commands: []
setup_commands:
  # ensure github keys are included in known hosts
  - grep -xqF "$(cat ~/.ssh/github_keys)" ~/.ssh/known_hosts 2>/dev/null || cat ~/.ssh/github_keys  >> ~/.ssh/known_hosts
  # clone / sync dotfiles; requires dotfiles deploy key
  - yadm rev-parse --is-inside-work-tree >/dev/null 2>&1 && GIT_SSH_COMMAND="ssh -i ~/.ssh/dotfiles_deploy_ed25519" yadm pull || GIT_SSH_COMMAND="ssh -i ~/.ssh/dotfiles_deploy_ed25519" yadm clone git@github.com:kevdale/dotfiles --no-checkout && yadm checkout ~
  # setup wandb
  - wandb login
  - source ~/.bash_profile && mkdir -p $WANDB_DIR
head_setup_commands:
  # clone the dev repo; requires `deploy_dev` function from the dotfiles yadm
  # clone above and deploy keys for dev and its submodules
  - deploy_repo dev
worker_setup_commands: []
head_start_ray_commands:
  - ray stop
  - ray start --head --port=6379 --object-manager-port=8076 --autoscaling-config=~/ray_bootstrap_config.yaml --dashboard-host=0.0.0.0
worker_start_ray_commands:
  - ray stop
  - ray start --address=$RAY_HEAD_IP:6379 --object-manager-port=8076
