AWSTemplateFormatVersion: 2010-09-09
Transform: 'AWS::LanguageExtensions'
Description: Development server
Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
    Default: rsa
  InstanceType:
    Description: Devserver EC2 instance type.
    Type: String
    Default: m6a.2xlarge
    AllowedValues:
      - g5g.2xlarge
      - g5g.4xlarge
      - g5g.8xlarge
      - g4dn.xlarge
      - g4dn.2xlarge
      - g4dn.4xlarge
      - g5.xlarge
      - g5.2xlarge
      - p3.2xlarge
      - m6a.xlarge
      - m6a.2xlarge
      - m7g.xlarge
      - m7g.2xlarge
      - m7g.4xlarge
  SecurityGroups:
    Description: Security groups to assign to the instance
    Type: List<AWS::EC2::SecurityGroup::Id>
    Default: sg-07301ebcb97e0124c,sg-0d1d2e94171ec41c1
  DevserverActivityTopic:
    Description: SNS topic to which activity should be sent
    Type: String
    Default: arn:aws:sns:us-west-2:960487471244:DevserverActivityTopic
  SystemFilesUrl:
    Description: URL of the system files to download
    Type: String
Mappings:
  InstanceTypePrefixToArch:
    m6a:
      Arch: x86-64
    m7g:
      Arch: aarch64
    g4dn:
      Arch: x86-64
    g5:
      Arch: x86-64
    g5g:
      Arch: aarch64
    p3:
      Arch: x86-64
  ArchToAMI:
    aarch64:
      # base ami-08a800e4b5aa90bb8, setup via install.sh:install_g5g()
      AMI: ami-071bc49379107ae95
    x86-64:
      # base ami-0ba26e8b3af2b7155, setup via install.sh:install_g5()
      AMI: ami-0c38021ff804d9342
Resources:
  Ec2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      ImageId: !FindInMap
        - ArchToAMI
        - !FindInMap
          - InstanceTypePrefixToArch
          - !Select [0, !Split [".", !Ref InstanceType]]
          - Arch
        - AMI
      KeyName: !Ref KeyName
      Monitoring: true
      SecurityGroupIds: !Ref SecurityGroups
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: 256
            VolumeType: gp3
      IamInstanceProfile: devserver
      UserData:
        Fn::Base64: !Sub |
          #!/usr/bin/env bash
          su - ec2-user bash -c '(
            SYSTEM_FILES_URL=${SystemFilesUrl}
            tmpdir=~/tmp/system_files
            mkdir -p $tmpdir
            aws s3 cp $SYSTEM_FILES_URL $tmpdir/system_files.tar.gz
            tar -xzf $tmpdir/system_files.tar.gz -C $tmpdir
            . $tmpdir/etc/profile.d/sitstart.sh##os.Linux
            . $tmpdir/etc/profile.d/sh.local##os.Linux
            sudo cp $tmpdir/etc/ssh/ssh_known_hosts##os.Linux \
              /etc/ssh/ssh_known_hosts
            deploy_sitstart
          )'
  InactiveAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmActions:
        - !Join [":", [arn:aws:automate, !Ref AWS::Region, ec2:stop]]
        - !Ref DevserverActivityTopic
      AlarmDescription: Fires when the instance is inactive
      AlarmName: !Join ["-", [!Ref AWS::StackName, InactiveAlarm]]
      ComparisonOperator: LessThanThreshold
      Dimensions:
        - Name: InstanceId
          Value: !Ref Ec2Instance
      EvaluationPeriods: 90
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Period: 60
      Statistic: Maximum
      Threshold: 0.5
Outputs:
  InstanceId:
    Description: InstanceId of the newly created EC2 instance
    Value: !Ref Ec2Instance
